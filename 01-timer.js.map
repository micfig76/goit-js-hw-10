{"version":3,"file":"01-timer.js","sources":["../src/js/01-timer.js"],"sourcesContent":["// import \"flatpickr/dist/flatpickr.min.css\";\n\nconst input = document.querySelector('input#datetime-picker');\nconst btn = document.querySelector('button[data-start]');\n\nfunction validateDate(selectedDate) {\n  const now = Date.now();\n  const selectedTimeStamp = selectedDate.getTime();\n  const isPastDate = selectedTimeStamp < now;\n  if (isPastDate) {\n    btn.disabled = true;\n    iziToast.warning({\n      title: 'Please choose a date in the future',\n      position: 'topRight',\n    });\n  } else {\n    btn.disabled = false;\n  }\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    validateDate(selectedDates[0]);\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(num) {\n  return num.toString().padStart(2, '0');\n}\n\nfunction setTimer({ days, hours, minutes, seconds }) {\n  document.querySelector('span.value[data-days]').textContent =\n    addLeadingZero(days);\n  document.querySelector('span.value[data-hours]').textContent =\n    addLeadingZero(hours);\n  document.querySelector('span.value[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('span.value[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nbtn.addEventListener('click', () => {\n  const interval = setInterval(() => {\n    const targetMs = new Date(input.value).getTime();\n    const timeDif = targetMs - Date.now();\n    if (timeDif <= 0) {\n      clearInterval(interval);\n      setTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.info({\n        title: 'The time is up!',\n        position: 'topRight',\n      });\n    } else {\n      const converted = convertMs(timeDif);\n      setTimer(converted);\n    }\n  }, 1_000);\n});\n"],"names":["input","btn","validateDate","selectedDate","now","options","selectedDates","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","num","setTimer","interval","timeDif","converted"],"mappings":"oCAEA,MAAMA,EAAQ,SAAS,cAAc,uBAAuB,EACtDC,EAAM,SAAS,cAAc,oBAAoB,EAEvD,SAASC,EAAaC,EAAc,CAClC,MAAMC,EAAM,KAAK,MACSD,EAAa,UACAC,GAErCH,EAAI,SAAW,GACf,SAAS,QAAQ,CACf,MAAO,qCACP,SAAU,UAChB,CAAK,GAEDA,EAAI,SAAW,EAEnB,CAEA,MAAMI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAaI,EAAc,CAAC,CAAC,CAC9B,CACH,EAEA,UAAUN,EAAOK,CAAO,EAExB,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAK,CAC3B,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC,CAEA,SAASC,EAAS,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACnD,SAAS,cAAc,uBAAuB,EAAE,YAC9CC,EAAeJ,CAAI,EACrB,SAAS,cAAc,wBAAwB,EAAE,YAC/CI,EAAeH,CAAK,EACtB,SAAS,cAAc,0BAA0B,EAAE,YACjDG,EAAeF,CAAO,EACxB,SAAS,cAAc,0BAA0B,EAAE,YACjDE,EAAeD,CAAO,CAC1B,CAEAX,EAAI,iBAAiB,QAAS,IAAM,CAClC,MAAMe,EAAW,YAAY,IAAM,CAEjC,MAAMC,EADW,IAAI,KAAKjB,EAAM,KAAK,EAAE,UACZ,KAAK,IAAG,EACnC,GAAIiB,GAAW,EACb,cAAcD,CAAQ,EACtBD,EAAS,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACtD,SAAS,KAAK,CACZ,MAAO,kBACP,SAAU,UAClB,CAAO,MACI,CACL,MAAMG,EAAYX,EAAUU,CAAO,EACnCF,EAASG,CAAS,CACnB,CACF,EAAE,GAAK,CACV,CAAC"}